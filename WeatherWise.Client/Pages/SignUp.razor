@page "/signup"
@using Microsoft.AspNetCore.Components.Forms
@inject Services.AuthService AuthService
@inject NavigationManager NavigationManager

<div class="register-page">
    <div class="register-container">
        <div class="form-content">
            <h1>Create Account</h1>
            <EditForm Model="signupModel" OnValidSubmit="HandleSignUp">
                <DataAnnotationsValidator /> 
                <div class="form-group">
                    <label for="email">Email</label>
                    <InputText id="email" @bind-Value="signupModel.Email" class="input-field"
                               placeholder="Enter your email" />
                    <ValidationMessage For="@(() => signupModel.Email)" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText type="password" id="password" @bind-Value="signupModel.Password"
                               class="input-field" placeholder="Enter your password" />
                    <ValidationMessage For="@(() => signupModel.Password)" />
                </div>
                <div class="form-group remember-me">
                    <input type="checkbox" id="terms" @bind="termsAccepted" />
                    <label for="terms">I agree all statements in <a href="#">Terms of service</a></label>
                </div>
                <div class="form-group">
                    <button type="submit" class="register-button" disabled="@(!termsAccepted)">Register</button>
                </div>
            </EditForm>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="error-message">@errorMessage</div>
            }
            <a href="/login" class="already-member">I am already a member</a>
        </div>
        <div class="image-content">
            <img src="/images/signup-image.jpg" alt="Sign up illustration" />
        </div>
    </div>
</div>

@code {
    private SignUpModel signupModel = new SignUpModel();
    private string errorMessage = string.Empty;
    private string confirmPassword = string.Empty;
    private bool termsAccepted = false;

    private async Task HandleSignUp()
    {
        if (signupModel.Password != confirmPassword)
        {
            errorMessage = "Passwords do not match.";
            return;
        }

        try
        {
            var session = await AuthService.SignUp(signupModel.Email, signupModel.Password);
            if (session != null)
            {
                NavigationManager.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private class SignUpModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}

<style>
    .register-page {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f9f9f9;
        font-family: 'Segoe UI', sans-serif;
    }

    .register-container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        max-width: 900px;
        width: 100%;
    }

    .form-content {
        flex: 1;
        padding-right: 2rem;
    }

        .form-content h1 {
            font-size: 2rem;
            margin-bottom: 1.5rem;
            color: #333;
        }

    .form-group {
        margin-bottom: 1rem;
    }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #333;
        }

    .input-field {
        width: 100%;
        padding: 0.8rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
    }

        .input-field:focus {
            outline: none;
            border-color: #007bff;
        }

    .form-group.remember-me {
        display: flex;
        align-items: center;
    }

        .form-group.remember-me label {
            font-size: 0.9rem;
            color: #555;
            margin-left: 0.5rem;
        }

        .form-group.remember-me a {
            color: #007bff;
            text-decoration: none;
        }

            .form-group.remember-me a:hover {
                text-decoration: underline;
            }

    .register-button {
        width: 100%;
        padding: 0.8rem;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .register-button:hover:not(:disabled) {
            background-color: #0056b3;
        }

        .register-button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

    .already-member {
        display: block;
        margin-top: 1rem;
        text-align: center;
        font-size: 0.9rem;
        color: #555;
        text-decoration: none;
    }

        .already-member:hover {
            text-decoration: underline;
        }

    .image-content {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .image-content img {
            max-width: 100%;
            height: auto;
            border-radius: 10px;
        }

    .error-message {
        margin-top: 1rem;
        padding: 0.8rem;
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
        border-radius: 5px;
        font-size: 0.9rem;
    }

    @@media (max-width: 768px) {
        .register-container {
            flex-direction: column;
            padding: 1.5rem;
        }

        .form-content {
            padding-right: 0;
            margin-bottom: 1.5rem;
        }
    }
</style>